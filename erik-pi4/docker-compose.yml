---
version: '3.7'
services:

########################################################################################
# Watchtower
# https://github.com/containrrr/watchtower
# As an alternative to Watchtower, look at https://github.com/pyouroboros/ouroboros
########################################################################################

  watchtower: # https://github.com/containrrr/watchtower
    container_name: watchtower
    restart: always
    image: containrrr/watchtower:armhf-latest
    environment:
      - TZ=${TZ}
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=***REMOVED***@gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=***REMOVED***
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=***REMOVED***@gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${EMAIL_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Cron Expression of 6 fields: <second> <minute> <hour> <day-of-month> <month> <day-of-week>
    command: --schedule "0 30 3 * * *" --cleanup
    # Checks for new container images everyday at 3:30am

########################################################################################
# DuckDNS
# https://hub.docker.com/r/linuxserver/duckdns
########################################################################################

  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SUBDOMAINS=***REMOVED***,***REMOVED***
      - TOKEN=***REMOVED***
      - LOG_FILE=true #optional
    volumes:
      - ${CONFIG_DIR}/duckdns:/config #optional
    restart: unless-stopped

########################################################################################
# oauth2
# https://quay.io/repository/pusher/oauth2_proxy
# https://github.com/pusher/oauth2_proxy
# https://github.com/pusher/oauth2_proxy/issues/46
########################################################################################

  oauth2:
    container_name: oauth2
    image: quay.io/pusher/oauth2_proxy:latest-armv6
    command:
      - "-cookie-domain=${FQDN}"
      - "-cookie-secure=true"
      - "-email-domain=*"
      - "-github-org=${GITHUB_ORG}"
      - "-http-address=0.0.0.0:4180"
      - "-pass-access-token"
      - "-provider=github"
      - "-redirect-url=https://${FQDN}/oauth2/callback"
      - "-set-authorization-header"
      - "-set-xauthrequest"
      - "-whitelist-domain=.${FQDN}"
    environment:
      - "OAUTH2_PROXY_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID}"
      - "OAUTH2_PROXY_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}"
      - "OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}"
    expose:
      - "4180"
    #ports:
      #- 4180:4180
    labels:
      - "traefik.enable=true"
      - "traefik.backend=oauth2"
      - "traefik.frontend.rule=HostRegexp:{subdomain:.+}.${FQDN},${FQDN}; PathPrefix:/oauth2"
      - "traefik.port=4180"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    networks:
      - backend
    restart: unless-stopped

########################################################################################
# Traefik
# https://hub.docker.com/_/traefik
########################################################################################

  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    environment:
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
    restart: always
    domainname: ${FQDN}
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      #- "traefik.frontend.rule=Host:traefik.${FQDN}"
      - "traefik.frontend.rule=Host:${FQDN}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=duckdns.org"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      #- "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIG_DIR}/traefik:/etc/traefik
      - ${CONFIG_DIR}/shared:/shared

########################################################################################
# netdata
# https://hub.docker.com/r/netdata/netdata
########################################################################################

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: ${FQDN} # set to fqdn of host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - PGID=996
    #ports:
      #- 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=netdata"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefixStrip: /netdata"
      - "traefik.frontend.rule=Host:netdata.${FQDN}"
      - "traefik.port=19999"
      #- "traefik.protocol=https"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      #- "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"

########################################################################################
# Downloaders
# https://hub.docker.com/r/haugene/transmission-openvpn/
########################################################################################

  transmission-vpn:
    container_name: transmission-vpn
    image: haugene/transmission-openvpn:latest-armhf
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    #ports:
    #- "XXXX:9091"
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/transmission-vpn:/data
      - ${EXTHDD_DIR}/downloads/torrents/watch:/data/watch
      - ${EXTHDD_DIR}/downloads/torrents/complete:/data/completed
      - ${EXTHDD_DIR}/downloads/torrents/incomplete:/data/incomplete
      - ${CONFIG_DIR}/transmission-vpn/openvpn:/etc/openvpn/torguard-custom
    environment:
      - OPENVPN_PROVIDER=TORGUARD
      #- OPENVPN_PROVIDER=TORGUARD-CUSTOM
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_CONFIG=USA-SEATTLE
      #- OPENVPN_CONFIG=TorGuard.USA.Seattle.STATIC
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=192.168.1.0/24
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=false
      #- TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
      #- TRANSMISSION_RPC_USERNAME=${TRANSMISSION_USERNAME}
      #- TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_PASSWORD}
      - TRANSMISSION_UMASK=002
      - TRANSMISSION_RATIO_LIMIT=0.4999
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_WEB_UI=combustion
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=transmission-vpn"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /transmission"
      - "traefik.frontend.rule=Host:transmission.${FQDN}"
      - "traefik.port=9091"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"

########################################################################################
# Indexers
# https://hub.docker.com/r/linuxserver/jackett
# https://hub.docker.com/r/linuxserver/radarr
# https://hub.docker.com/r/linuxserver/sonarr
########################################################################################

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${EXTHDD_DIR}/media/tv:/tv
      - ${EXTHDD_DIR}/downloads:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    #ports:
      #- 8989:8989
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /sonarr"
      - "traefik.frontend.rule=Host:sonarr.${FQDN}"
      - "traefik.port=8989"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"


  radarr:
    image: "linuxserver/radarr"
    container_name: "radarr"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${EXTHDD_DIR}/downloads:/downloads
      - ${EXTHDD_DIR}/media/movies:/movies
      - "/etc/localtime:/etc/localtime:ro"
    #ports:
      #- 7878:7878
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /radarr"
      - "traefik.frontend.rule=Host:radarr.${FQDN}"
      - "traefik.port=7878"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
        # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"


  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/jackett:/config
      - ${VOLUME_DIR}/jackett:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    #ports:
      #- 9117:9117
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      #- "traefik.frontend.rule=Host:jackett.${FQDN}"
      - "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /jackett"
      - "traefik.port=9117"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

########################################################################################
# Media
# https://hub.docker.com/r/linuxserver/plex
# https://hub.docker.com/r/linuxserver/tautulli
########################################################################################

  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
    volumes:
      - ${CONFIG_DIR}/plex/config:/config
      - ${EXTHDD_DIR}/media/tv:/data/tvshows
      - ${EXTHDD_DIR}/media/movies:/data/movies
      - ${EXTHDD_DIR}/media/other:/data/other
      - ${CONFIG_DIR}/plex/transcode:/transcode
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/plex/tautulli:/config
      - ${CONFIG_DIR}/plex/Config/Library/Application Support/Plex Media Server/Logs:/logs:ro #Map this to Plex log directory - recommended RO.
    #ports:
      #- 8181:8181
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tautulli"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /tautulli"
      - "traefik.frontend.rule=Host:tautulli.${FQDN}"
      - "traefik.port=8181"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"

########################################################################################
# Organize
# https://hub.docker.com/r/linuxserver/heimdall/
########################################################################################

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/heimdall:/config
    #ports:
      #- 80:80
      #- 443:443
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=heimdall"
      - "traefik.frontend.rule=Host:${FQDN}"
      #- "traefik.frontend.rule=Host:heimdall.${FQDN}"
      - "traefik.port=443"
      - "traefik.protocol=https"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"

########################################################################################
# Pihole
# https://github.com/pi-hole/docker-pi-hole/
# https://docs.pi-hole.net/
########################################################################################

  pihole:
    container_name: pihole
    domainname: docker
    hostname: pihole
    image: pihole/pihole:latest
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      # - '67:67/udp'
      #- 'XXXX:80'
      #- 'YYYY:443'
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/pihole/pihole:/etc/pihole
      - ${CONFIG_DIR}/pihole/pihole.log:/var/log/pihole.log
      - ${CONFIG_DIR}/pihole/dnsmask.d:/etc/dnsmasq.d
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    networks:
      - backend
    environment:
      - ServerIP=192.168.1.15
      - PROXY_LOCATION=pihole
      - VIRTUAL_HOST=${FQDN}/pihole
      - VIRTUAL_PORT=80
      - TZ=${TZ}
      #- WEBPASSWORD=RandomWhenCommentedOut
      - DNS1=127.0.0.1
      - DNS2=1.1.1.1
      #- DNS2=1.0.0.1
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pihole"
      - "traefik.port=80"
      - "traefik.docker.network=backend"
      #- "traefik.frontend.rule=HostRegexp:pihole.${FQDN},{catchall:.*}"
      - "traefik.frontend.rule=Host:pihole.${FQDN}"
      - "traefik.frontend.priority=1"
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=duckdns.org
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=true

########################################################################################
# Portainer
# https://hub.docker.com/r/portainer/portainer
########################################################################################

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/portainer:/data
    environment:
      - TZ=${TZ}
    #ports:
      #- 9000:9000
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /portainer"
      - "traefik.frontend.rule=Host:portainer.${FQDN}"
      - "traefik.port=9000"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

########################################################################################
# Backup Stack
# https://hub.docker.com/_/postgres
# https://hub.docker.com/_/nextcloud
# https://hub.docker.com/r/linuxserver/duplicati
# Volumes are at bottom of yaml file
########################################################################################

#  db:
#    container_name: MariaDB
#    image: mariadb:latest
#    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
#    restart: unless-stopped
#    volumes:
#      - db:/var/lib/mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD=
#      - MYSQL_PASSWORD=
#      - MYSQL_DATABASE=nextcloud
#      - MYSQL_USER=nextcloud

  db:
    image: postgres
    container_name: PostgreSQL
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=whatever
      - POSTGRES_DB=guacamole_db
      - POSTGRES_USER=nextcloud
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  Nextcloud:
    image: nextcloud:latest
    container_name: Nextcloud
    #ports:
      #- 8081:80
    links:
      - db
    volumes:
      - nextcloud:/var/www/html
      - ${CONFIG_DIR}/nextcloud:/var/www/html/data:rw #config directory
      - ${EXTHDD_DIR}/nextcloud:/exthdd #external storage
      # Make check_data_directory_permissions => false and enable external storage support (https://github.com/nextcloud/docker/issues/236)
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - NEXTCLOUD_ADMIN_USER=***REMOVED***
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.${FQDN} duckdns.org
    domainname: nextcloud.${FQDN}
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=Nextcloud"
      - "traefik.frontend.rule=Host:nextcloud.${FQDN}"
      - "traefik.port=80"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/duplicati:/config
      - ${VOLUME_DIR}/duplicati:/backups
      - ${EXTHDD_DIR}:/source
    #ports:
      #- 8200:8200
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.backend=duplicati"
      - "traefik.frontend.rule=Host:duplicati.${FQDN}"
      - "traefik.port=8200"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

########################################################################################
# Grocy
# https://hub.docker.com/r/linuxserver/grocy
# https://grocy.info/
########################################################################################

  grocy:
    image: linuxserver/grocy
    container_name: grocy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/grocy:/config
    #ports:
      #- 9283:80
    networks:
      - backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grocy"
      #- "traefik.frontend.rule=Host:traefik.${FQDN}"
      - "traefik.frontend.rule=Host:grocy.${FQDN}"
      - "traefik.port=80"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=duckdns.org"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

volumes:
  db:
    driver: local
  nextcloud:
    driver: local

networks:
  frontend:
    external:
      name: frontend
  backend:
    external:
      name: backend