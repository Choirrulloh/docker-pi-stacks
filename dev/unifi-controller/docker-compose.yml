---
version: '3.7'
services:

########################################################################################
# Unifi Controller
# https://hub.docker.com/r/linuxserver/unifi-controller
########################################################################################

  unifi-controller:
    image: linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      #- MEM_LIMIT=1024M #Optionally change the Java memory limit (-Xmx) (default is 1024M)
    volumes:
      - ${CONFIG_DIR}/unifi-controller:/config #Config
      - ${VOLUME_DIR}/unifi-controller:/config/data #Data dir grows to 250MB+
    ports:
      - 3478:3478/udp #For STUN
      #- 10001:10001/udp #required for AP discovery
      - 8080:8080 #For device and controller communication.
      #- 8081:8081 #Unifi communication port
      #- 8443:8443 #For controller GUI/API as seen in a web browser
      #- 8843:8843 #Unifi communication port
      #- 8880:8880 #For HTTP portal redirection.
      #- 6789:6789 #For UniFi mobile speed test.
    restart: unless-stopped
    networks:
      - backend
    labels:
      # Traefik Configuration
      - "traefik.enable=true"
      - "traefik.backend=unifi-controller"
      #- "traefik.frontend.rule=Host:${FQDN}; PathPrefix: /unifi"
      - "traefik.frontend.rule=Host:unifi.${FQDN}"
      - "traefik.port=8443"
      - "traefik.protocol=https" #Required for Unifi -- without this and you will get "This combination of host and port requires TLS."
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

networks:
  #frontend:
    #external:
      #name: frontend
      #run: docker network create --name=frontend
  backend:
    external:
      name: backend
      #run: docker network create --name=backend
