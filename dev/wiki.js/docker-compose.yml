version: "3"
services:

  db:
    image: postgres:11-alpine
    container_name: wikijs-db
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${USERNAME}
    logging:
      driver: "none"
    restart: unless-stopped
    networks:
        - backend
    volumes:
      #- db-data:/var/lib/postgresql/data
      - ${VOLUME_DIR}/wikijs-db:/var/lib/postgresql/data #data directory

  wiki:
    image: requarks/wiki:2
    container_name: wikijs
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${USERNAME}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: wiki
    restart: unless-stopped
    networks:
        - backend
    # ports:
    #   - "80:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=wiki"
      - "traefik.frontend.rule=Host:wiki.${FQDN}"
      - "traefik.port=3000"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

networks:
  backend:
    external:
      name: backend
      #run: docker network create --name=backend